# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /home                                                controllers.ClimateServiceController.home(email ?= null, vfile ?= null, dataset ?= null)
GET 		/													 controllers.ClimateServiceController.home(email ?= null, vfile ?= null, dataset ?= null)

# Home page application
GET     /application                           controllers.Application.index()


# Login page
#GET     /signin                     controllers.UserController.signIn()
#POST    /signin                     controllers.UserController.authenticate()
#GET     /signout                    controllers.UserController.signOut()

# User page
#GET     /users                      controllers.UserController.index()
#GET     /users/create               controllers.UserController.create()
#POST    /users/create               controllers.UserController.save()
#GET     /users/:id                  controllers.UserController.show(id : Long)
#POST    /users/:id/update           controllers.UserController.update(id : Long)
#POST    /users/:id/delete           controllers.UserController.delete(id : Long)

# BugReporting
GET         /bugs                                                controllers.BugReportController.reports()
GET         /newReport                                           controllers.BugReportController.newReport()
GET         /bug/list                                            controllers.BugReportController.list()
POST        /delete/report                                       controllers.BugReportController.deleteReport()
POST        /solve/report                                        controllers.BugReportController.solveReport()

# About Us
GET         /aboutus                                             controllers.AboutusController.aboutUs()
GET         /aboutProject                                        controllers.AboutusController.aboutProject()

# Climate Model
GET			/climate											controllers.ClimateServiceController.home(email ?= null, vfile ?= null, dataset ?= null)
GET			/climate/tutorial									controllers.ClimateServiceController.tutorial()
GET			/climate/climateServices							controllers.ClimateServiceController.climateServices()
GET			/climate/mostRecentlyAddedClimateServices			controllers.ClimateServiceController.mostRecentlyAddedClimateServices()
GET			/climate/mostRecentlyUsedClimateServices			controllers.ClimateServiceController.mostRecentlyUsedClimateServices()
GET			/climate/mostPopularClimateServices					controllers.ClimateServiceController.mostPopularClimateServices()
POST		/climate/new/climateServices    					controllers.ClimateServiceController.newClimateService()
POST    	/climate/delete/climateServices   					controllers.ClimateServiceController.deleteClimateService()
POST		/climate/download/climateServices					controllers.ClimateServiceController.downloadClimateService()
POST		/climate/edit/climateServices						controllers.ClimateServiceController.editClimateService()
GET			/climate/new/climateServices						controllers.ClimateServiceController.addClimateServices()
GET			/climate/oneService									controllers.ClimateServiceController.oneService(url ?= null)

#Workflow
GET         /workflow/createWorkflow                            controllers.WorkflowController.createWorkflow()
GET         /workflows                                          controllers.WorkflowController.workflows()
GET         /workflow/workflowCreating                          controllers.WorkflowController.handleCreateWorkflow()
GET         /workflow/linkTags                                  controllers.WorkflowController.linkTags()
GET         /workflow/disWorkflow                               controllers.WorkflowController.displayWorkflow(id: Long)
GET         /workflow/getTop10WorkflowsByViewCount              controllers.WorkflowController.workflowsByTopViewCount()

# Tag Model
GET			/tag											controllers.TagController.home(email ?= null, vfile ?= null, dataset ?= null)
GET			/tag/tags							            controllers.TagController.tags()
GET			/tag/oneService									controllers.TagController.oneService(url ?= null)
GET         /tag/tagCloud                                   controllers.TagController.tagCloud()


#Keyword search
GET 		/climate/datasets									controllers.DatasetController.datasetList()
GET			/climate/searchDataSet 					 			controllers.DatasetController.searchDataset()
GET 		/climate/getSearchResult				 			controllers.DatasetController.getSearchResult()

#User Profiles
GET 		/users/myProfile									controllers.UserController.profile()
GET 		/users/allUsers									    controllers.UserController.allUsers()
GET 		/users/signUpForm									controllers.UserController.signUpForm()
GET 		/users/signUp									    controllers.UserController.signUp()
GET 		/users/signInForm									controllers.UserController.signInForm()
GET 		/users/signIn									    controllers.UserController.signIn()
GET 		/users/signOut									    controllers.UserController.signOut()
GET 		/users/friends									    controllers.UserController.showFriends()
GET 		/users/addfriend									controllers.UserController.addFriend(userId : Long, isSubscribe : Boolean)
GET 		/users/deletefriend									controllers.UserController.deleteFriend(userId : Long, isSubscribe : Boolean)
GET 		/users/addSubscribe									controllers.UserController.addSubscribe(userId : Long, isFriend : Boolean)
GET 		/users/deleteSubscribe							    controllers.UserController.deleteSubscribe(userId : Long, isFriend : Boolean)
GET 		/users/subscriptions							    controllers.UserController.showSubscriptions()
GET 		/users/account/:userId							    controllers.UserController.oneUser(userId : Long)
GET 		/usergroups/all							            controllers.UserGroupController.showGroups()
GET 		/usergroups/addGroup							    controllers.UserGroupController.newGroup()
GET 		/usergroups/addGroupForm							controllers.UserGroupController.newGroupForm()
GET 		/usergroups/:userGroupId							controllers.UserGroupController.oneGroup(userGroupId : Long)

#Map static resources from the /public folder to the /assets URL path
GET     	/assets/*file               						controllers.Assets.at(path="/public", file)
